using System;

interface ICipher
{
    string encode(string);
    string decode(string);
}

class ACipher : ICipher
{
    public string encode(string text)
    {
        string result = "";
        foreach (char c in text)
        {
            if (char.IsLetter(c))
            {
                char BaseC = char.IsUpper(c) ? 'A' : 'a';
                result += (char)(((c - BaseC + 1) % 26) + BaseC);  // зсувае литеру на 1 ( 26 кількість букв) 
            }
            else
            {
                result += c;
            }
        }
        return result; 
    }

    public string decode(string text)
    {
        string result = "";
        foreach (char c in text)
        {
            if (char.IsLetter(c))     // чи є ця літера с
            {
                char BaseC = char.IsUpper(c) ? 'A' : 'a';     //для маленьких и великих
                result += (char)(((c - BaseC - 1 + 26) % 26) + baseC); // з відємними числами зсувае литеру на 1 ( 26 кількість букв) у зворотньщму напр
            }
            else
            {
                result += c;
            }
        }
        return result;
    }
}

class BCipher : ICipher
{
    public string encode(string text)
    {
        string result = "";
        foreach (char c in text)
        {
            if (char.IsLetter(c))
            {
                char BaseC = char.IsUpper(c) ? 'A' : 'a';
                result += (char)(BaseC + 25 - (c - baseC));   // замінює літеру на літеру з кінця
            }
            else
            {
                result += c;
            }
        }
        return result;
    }

    public string decode(string text)
    {
        return encode(text);
    }
}

class Program
{
    static void Main(string[] args)
    {
        string originalText = "Hello World!";
        ICipher aCipher = new ACipher();
        string encodedA = aCipher.encode(originalText);
        string decodedA = aCipher.decode(encodedA);

        ICipher bCipher = new BCipher();
        string encodedB = bCipher.encode(originalText);
        string decodedB = bCipher.decode(encodedB);
        Console.WriteLine(originalText);
        Console.WriteLine(encodedA);
        Console.WriteLine(decodedA);
        Console.WriteLine(encodedB);
        Console.WriteLine(decodedB);
    }
}
